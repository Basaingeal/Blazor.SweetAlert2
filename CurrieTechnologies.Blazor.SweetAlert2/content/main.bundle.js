!function(e){function t(t){for(var r,u,l=t[0],a=t[1],c=t[2],f=0,d=[];f<l.length;f++)u=l[f],o[u]&&d.push(o[u][0]),o[u]=0;for(r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r]);for(s&&s(t);d.length;)d.shift()();return i.push.apply(i,c||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],r=!0,l=1;l<n.length;l++){var a=n[l];0!==o[a]&&(r=!1)}r&&(i.splice(t--,1),e=u(u.s=n[0]))}return e}var r={},o={0:0},i=[];function u(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,u),n.l=!0,n.exports}u.m=e,u.c=r,u.d=function(e,t,n){u.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},u.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},u.t=function(e,t){if(1&t&&(e=u(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(u.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)u.d(n,r,function(t){return e[t]}.bind(null,r));return n},u.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return u.d(t,"a",t),t},u.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},u.p="";var l=window.webpackJsonp=window.webpackJsonp||[],a=l.push.bind(l);l.push=t,l=l.slice();for(var c=0;c<l.length;c++)t(l[c]);var s=a;i.push([0,1]),n()}([function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(o,i){function u(e){try{a(r.next(e))}catch(e){i(e)}}function l(e){try{a(r.throw(e))}catch(e){i(e)}}function a(e){e.done?o(e.value):new n(function(t){t(e.value)}).then(u,l)}a((r=r.apply(e,t||[])).next())})},o=this&&this.__generator||function(e,t){var n,r,o,i,u={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;u;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return u.label++,{value:i[1],done:!1};case 5:u.label++,r=i[1],i=[0];continue;case 7:i=u.ops.pop(),u.trys.pop();continue;default:if(!(o=(o=u.trys).length>0&&o[o.length-1])&&(6===i[0]||2===i[0])){u=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){u.label=i[1];break}if(6===i[0]&&u.label<o[1]){u.label=o[1],o=i;break}if(o&&u.label<o[2]){u.label=o[2],u.ops.push(i);break}o[2]&&u.ops.pop(),u.trys.pop();continue}i=t.call(e,u)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},i=this;Object.defineProperty(t,"__esModule",{value:!0});var u=n(1),l=window,a="CurrieTechnologies.Blazor.SweetAlert2";function c(e,t){return t.value=t.value.toString(),DotNet.invokeMethodAsync(a,"ReceiveFireResult",e,t)}function s(e,t){var n=t;return n.value=n.value.map(function(e){return e.toString()}),DotNet.invokeMethodAsync(a,"ReceiveQueueResult",e,n)}function f(e,t,n){var r=e;return e.preConfirm&&(r.preConfirm=n?function(e){return function(e,t){var n=Array.isArray(t)?t:[t];return DotNet.invokeMethodAsync(a,"ReceivePreConfirmQueueInput",e,n.map(function(e){return e.toString()}))}(t,e)}:function(e){return function(e,t){return DotNet.invokeMethodAsync(a,"ReceivePreConfirmInput",e,t.toString())}(t,e)}),r.inputValidator=e.inputValidator?function(e){return function(e,t){return DotNet.invokeMethodAsync(a,"ReceiveInputValidatorInput",e,t)}(t,e)}:null,r.onBeforeOpen=e.onBeforeOpen?function(){return function(e){DotNet.invokeMethodAsync(a,"ReceiveOnBeforeOpenInput",e)}(t)}:null,r.onAfterClose=e.onAfterClose?function(){return function(e){DotNet.invokeMethodAsync(a,"ReceiveOnAfterCloseInput",e)}(t)}:null,r.onOpen=e.onOpen?function(){return function(e){DotNet.invokeMethodAsync(a,"ReceiveOnOpenInput",e)}(t)}:null,r.onClose=e.onClose?function(){return function(e){DotNet.invokeMethodAsync(a,"ReceiveOnCloseInput",e)}(t)}:null,r.grow="false"!==e.grow&&e.grow,r}l.CurrieTechnologies=l.CurrieTechnologies||{},l.CurrieTechnologies.Blazor=l.CurrieTechnologies.Blazor||{},l.CurrieTechnologies.Blazor.SweetAlert2=l.CurrieTechnologies.Blazor.SweetAlert2||{},l.CurrieTechnologies.Blazor.SweetAlert2.Fire=function(e,t,n,l){return r(i,void 0,void 0,function(){var r;return o(this,function(o){switch(o.label){case 0:return[4,u.default.fire(t,n,l)];case 1:return r=o.sent(),[4,c(e,r)];case 2:return o.sent(),[2]}})})},l.CurrieTechnologies.Blazor.SweetAlert2.FireSettings=function(e,t){return r(i,void 0,void 0,function(){var n,r;return o(this,function(o){switch(o.label){case 0:return n=f(t,e,!1),[4,u.default.fire(n)];case 1:return r=o.sent(),[4,c(e,r)];case 2:return o.sent(),[2]}})})},l.CurrieTechnologies.Blazor.SweetAlert2.Queue=function(e,t,n){return r(i,void 0,void 0,function(){var r,i;return o(this,function(o){switch(o.label){case 0:return r=t.map(function(e,t){return f(n[t],e,!0)}),[4,u.default.queue(r)];case 1:return i=o.sent(),[4,s(e,i)];case 2:return o.sent(),[2]}})})},l.CurrieTechnologies.Blazor.SweetAlert2.IsVisible=function(){return!!u.default.isVisible()},l.CurrieTechnologies.Blazor.SweetAlert2.Update=function(e,t){return r(i,void 0,void 0,function(){var n;return o(this,function(r){return n=f(t,e,!1),u.default.update(n),[2]})})},l.CurrieTechnologies.Blazor.SweetAlert2.Close=function(e){u.default.close(function(){return function(e){DotNet.invokeMethodAsync(a,"ReceiveOnCompleteInput",e)}(e)})},l.CurrieTechnologies.Blazor.SweetAlert2.EnableButtons=function(){u.default.enableButtons()},l.CurrieTechnologies.Blazor.SweetAlert2.DisableButtons=function(){u.default.disableButtons()},l.CurrieTechnologies.Blazor.SweetAlert2.ShowLoading=function(){u.default.showLoading()},l.CurrieTechnologies.Blazor.SweetAlert2.HideLoading=function(){u.default.hideLoading()},l.CurrieTechnologies.Blazor.SweetAlert2.HideLoading=function(){return u.default.isLoading()},l.CurrieTechnologies.Blazor.SweetAlert2.ClickConfirm=function(){u.default.clickConfirm()},l.CurrieTechnologies.Blazor.SweetAlert2.ClickCancel=function(){u.default.clickCancel()},l.CurrieTechnologies.Blazor.SweetAlert2.ShowValidationMessage=function(e){u.default.showValidationMessage(e)},l.CurrieTechnologies.Blazor.SweetAlert2.ResetValidationMessage=function(){u.default.resetValidationMessage()},l.CurrieTechnologies.Blazor.SweetAlert2.DisableInput=function(){u.default.disableInput()},l.CurrieTechnologies.Blazor.SweetAlert2.EnableInput=function(){u.default.enableInput()},l.CurrieTechnologies.Blazor.SweetAlert2.GetTimerLeft=function(){return u.default.getTimerLeft()},l.CurrieTechnologies.Blazor.SweetAlert2.StopTimer=function(){return u.default.stopTimer()},l.CurrieTechnologies.Blazor.SweetAlert2.ResumeTimer=function(){return u.default.resumeTimer()},l.CurrieTechnologies.Blazor.SweetAlert2.ToggleTimer=function(){return u.default.toggleTimer()},l.CurrieTechnologies.Blazor.SweetAlert2.IsTimmerRunning=function(){return u.default.isTimerRunning()},l.CurrieTechnologies.Blazor.SweetAlert2.IncreaseTimer=function(e){return u.default.increaseTimer(e)},l.CurrieTechnologies.Blazor.SweetAlert2.GetQueueStep=function(){return u.default.getQueueStep()},l.CurrieTechnologies.Blazor.SweetAlert2.InsertQueueStep=function(e,t,n){var r=f(t,e,!0);return u.default.insertQueueStep(r,n)},l.CurrieTechnologies.Blazor.SweetAlert2.DeleteQueueStep=function(e){u.default.deleteQueueStep(e)},l.CurrieTechnologies.Blazor.SweetAlert2.ShowProgressSteps=function(){u.default.showProgressSteps()},l.CurrieTechnologies.Blazor.SweetAlert2.HideProgressSteps=function(){u.default.hideProgressSteps()},l.CurrieTechnologies.Blazor.SweetAlert2.IsValidParamter=function(e){return u.default.isValidParameter(e)},l.CurrieTechnologies.Blazor.SweetAlert2.IsUpdatableParamter=function(e){return u.default.isUpdatableParameter(e)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N3ZWV0QWxlcnQudHMiXSwibmFtZXMiOlsid2VicGFja0pzb25wQ2FsbGJhY2siLCJkYXRhIiwibW9kdWxlSWQiLCJjaHVua0lkIiwiY2h1bmtJZHMiLCJtb3JlTW9kdWxlcyIsImV4ZWN1dGVNb2R1bGVzIiwiaSIsInJlc29sdmVzIiwibGVuZ3RoIiwiaW5zdGFsbGVkQ2h1bmtzIiwicHVzaCIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm1vZHVsZXMiLCJwYXJlbnRKc29ucEZ1bmN0aW9uIiwic2hpZnQiLCJkZWZlcnJlZE1vZHVsZXMiLCJhcHBseSIsImNoZWNrRGVmZXJyZWRNb2R1bGVzIiwicmVzdWx0IiwiZGVmZXJyZWRNb2R1bGUiLCJmdWxmaWxsZWQiLCJqIiwiZGVwSWQiLCJzcGxpY2UiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwicyIsImluc3RhbGxlZE1vZHVsZXMiLCIwIiwiZXhwb3J0cyIsIm1vZHVsZSIsImwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicCIsImpzb25wQXJyYXkiLCJ3aW5kb3ciLCJvbGRKc29ucEZ1bmN0aW9uIiwic2xpY2UiLCJfdGhpcyIsInRoaXMiLCJzd2VldGFsZXJ0Ml8xIiwiZG9tV2luZG93IiwibmFtZXNwYWNlIiwiZGlzcGF0Y2hGaXJlUmVzdWx0IiwicmVxdWVzdElkIiwidG9TdHJpbmciLCJEb3ROZXQiLCJpbnZva2VNZXRob2RBc3luYyIsImRpc3BhdGNoUXVldWVSZXN1bHQiLCJxdWV1ZVJlc3VsdCIsIm1hcCIsInYiLCJnZXRTd2FsU2V0dGluZ3NGcm9tUG9jbyIsInNldHRpbmdzIiwiaXNRdWV1ZSIsInN3YWxTZXR0aW5ncyIsInByZUNvbmZpcm0iLCJpbnB1dFZhbHVlIiwidmFsQXJyYXkiLCJBcnJheSIsImlzQXJyYXkiLCJkaXNwYXRjaFF1ZXVlUHJlQ29uZmlybSIsImRpc3BhdGNoUHJlQ29uZmlybSIsImlucHV0VmFsaWRhdG9yIiwiZGlzcGF0Y2hJbnB1dFZhbGlkYXRvciIsIm9uQmVmb3JlT3BlbiIsImRpc3BhdGNoT25CZWZvcmVPcGVuIiwib25BZnRlckNsb3NlIiwiZGlzcGF0Y2hPbkFmdGVyQ2xvc2UiLCJvbk9wZW4iLCJkaXNwYXRjaE9uT3BlbiIsIm9uQ2xvc2UiLCJkaXNwYXRjaE9uQ2xvc2UiLCJncm93IiwiQ3VycmllVGVjaG5vbG9naWVzIiwiQmxhem9yIiwiU3dlZXRBbGVydDIiLCJGaXJlIiwidGl0bGUiLCJtZXNzYWdlIiwidHlwZSIsIl9fYXdhaXRlciIsImRlZmF1bHQiLCJmaXJlIiwiX2EiLCJzZW50IiwiRmlyZVNldHRpbmdzIiwic2V0dGluZ3NQb2NvIiwiUXVldWUiLCJvcHRpb25JZHMiLCJzdGVwcyIsImFyclN3YWxTZXR0aW5ncyIsIm9wdGlvbklkIiwicXVldWUiLCJJc1Zpc2libGUiLCJpc1Zpc2libGUiLCJVcGRhdGUiLCJ1cGRhdGUiLCJDbG9zZSIsImNsb3NlIiwiZGlzcGF0Y2hPbkNvbXBsZXRlIiwiRW5hYmxlQnV0dG9ucyIsImVuYWJsZUJ1dHRvbnMiLCJEaXNhYmxlQnV0dG9ucyIsImRpc2FibGVCdXR0b25zIiwiU2hvd0xvYWRpbmciLCJzaG93TG9hZGluZyIsIkhpZGVMb2FkaW5nIiwiaGlkZUxvYWRpbmciLCJpc0xvYWRpbmciLCJDbGlja0NvbmZpcm0iLCJjbGlja0NvbmZpcm0iLCJDbGlja0NhbmNlbCIsImNsaWNrQ2FuY2VsIiwiU2hvd1ZhbGlkYXRpb25NZXNzYWdlIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJzaG93VmFsaWRhdGlvbk1lc3NhZ2UiLCJSZXNldFZhbGlkYXRpb25NZXNzYWdlIiwicmVzZXRWYWxpZGF0aW9uTWVzc2FnZSIsIkRpc2FibGVJbnB1dCIsImRpc2FibGVJbnB1dCIsIkVuYWJsZUlucHV0IiwiZW5hYmxlSW5wdXQiLCJHZXRUaW1lckxlZnQiLCJnZXRUaW1lckxlZnQiLCJTdG9wVGltZXIiLCJzdG9wVGltZXIiLCJSZXN1bWVUaW1lciIsInJlc3VtZVRpbWVyIiwiVG9nZ2xlVGltZXIiLCJ0b2dnbGVUaW1lciIsIklzVGltbWVyUnVubmluZyIsImlzVGltZXJSdW5uaW5nIiwiSW5jcmVhc2VUaW1lciIsImluY3JlYXNlVGltZXIiLCJHZXRRdWV1ZVN0ZXAiLCJnZXRRdWV1ZVN0ZXAiLCJJbnNlcnRRdWV1ZVN0ZXAiLCJzdGVwIiwiaW5kZXgiLCJzdGVwU2V0dGluZ3MiLCJpbnNlcnRRdWV1ZVN0ZXAiLCJEZWxldGVRdWV1ZVN0ZXAiLCJkZWxldGVRdWV1ZVN0ZXAiLCJTaG93UHJvZ3Jlc3NTdGVwcyIsInNob3dQcm9ncmVzc1N0ZXBzIiwiSGlkZVByb2dyZXNzU3RlcHMiLCJoaWRlUHJvZ3Jlc3NTdGVwcyIsIklzVmFsaWRQYXJhbXRlciIsInBhcmFtTmFtZSIsImlzVmFsaWRQYXJhbWV0ZXIiLCJJc1VwZGF0YWJsZVBhcmFtdGVyIiwiaXNVcGRhdGFibGVQYXJhbWV0ZXIiXSwibWFwcGluZ3MiOiJhQUNBLFNBQUFBLEVBQUFDLEdBUUEsSUFQQSxJQU1BQyxFQUFBQyxFQU5BQyxFQUFBSCxFQUFBLEdBQ0FJLEVBQUFKLEVBQUEsR0FDQUssRUFBQUwsRUFBQSxHQUlBTSxFQUFBLEVBQUFDLEVBQUEsR0FDUUQsRUFBQUgsRUFBQUssT0FBb0JGLElBQzVCSixFQUFBQyxFQUFBRyxHQUNBRyxFQUFBUCxJQUNBSyxFQUFBRyxLQUFBRCxFQUFBUCxHQUFBLElBRUFPLEVBQUFQLEdBQUEsRUFFQSxJQUFBRCxLQUFBRyxFQUNBTyxPQUFBQyxVQUFBQyxlQUFBQyxLQUFBVixFQUFBSCxLQUNBYyxFQUFBZCxHQUFBRyxFQUFBSCxJQUtBLElBRkFlLEtBQUFoQixHQUVBTyxFQUFBQyxRQUNBRCxFQUFBVSxPQUFBVixHQU9BLE9BSEFXLEVBQUFSLEtBQUFTLE1BQUFELEVBQUFiLEdBQUEsSUFHQWUsSUFFQSxTQUFBQSxJQUVBLElBREEsSUFBQUMsRUFDQWYsRUFBQSxFQUFpQkEsRUFBQVksRUFBQVYsT0FBNEJGLElBQUEsQ0FHN0MsSUFGQSxJQUFBZ0IsRUFBQUosRUFBQVosR0FDQWlCLEdBQUEsRUFDQUMsRUFBQSxFQUFrQkEsRUFBQUYsRUFBQWQsT0FBMkJnQixJQUFBLENBQzdDLElBQUFDLEVBQUFILEVBQUFFLEdBQ0EsSUFBQWYsRUFBQWdCLEtBQUFGLEdBQUEsR0FFQUEsSUFDQUwsRUFBQVEsT0FBQXBCLElBQUEsR0FDQWUsRUFBQU0sSUFBQUMsRUFBQU4sRUFBQSxLQUlBLE9BQUFELEVBSUEsSUFBQVEsRUFBQSxHQUtBcEIsRUFBQSxDQUNBcUIsRUFBQSxHQUdBWixFQUFBLEdBR0EsU0FBQVMsRUFBQTFCLEdBR0EsR0FBQTRCLEVBQUE1QixHQUNBLE9BQUE0QixFQUFBNUIsR0FBQThCLFFBR0EsSUFBQUMsRUFBQUgsRUFBQTVCLEdBQUEsQ0FDQUssRUFBQUwsRUFDQWdDLEdBQUEsRUFDQUYsUUFBQSxJQVVBLE9BTkFoQixFQUFBZCxHQUFBYSxLQUFBa0IsRUFBQUQsUUFBQUMsSUFBQUQsUUFBQUosR0FHQUssRUFBQUMsR0FBQSxFQUdBRCxFQUFBRCxRQUtBSixFQUFBTyxFQUFBbkIsRUFHQVksRUFBQVEsRUFBQU4sRUFHQUYsRUFBQVMsRUFBQSxTQUFBTCxFQUFBTSxFQUFBQyxHQUNBWCxFQUFBWSxFQUFBUixFQUFBTSxJQUNBMUIsT0FBQTZCLGVBQUFULEVBQUFNLEVBQUEsQ0FBMENJLFlBQUEsRUFBQUMsSUFBQUosS0FLMUNYLEVBQUFnQixFQUFBLFNBQUFaLEdBQ0Esb0JBQUFhLGVBQUFDLGFBQ0FsQyxPQUFBNkIsZUFBQVQsRUFBQWEsT0FBQUMsWUFBQSxDQUF3REMsTUFBQSxXQUV4RG5DLE9BQUE2QixlQUFBVCxFQUFBLGNBQWlEZSxPQUFBLEtBUWpEbkIsRUFBQW9CLEVBQUEsU0FBQUQsRUFBQUUsR0FFQSxHQURBLEVBQUFBLElBQUFGLEVBQUFuQixFQUFBbUIsSUFDQSxFQUFBRSxFQUFBLE9BQUFGLEVBQ0EsS0FBQUUsR0FBQSxpQkFBQUYsUUFBQUcsV0FBQSxPQUFBSCxFQUNBLElBQUFJLEVBQUF2QyxPQUFBd0MsT0FBQSxNQUdBLEdBRkF4QixFQUFBZ0IsRUFBQU8sR0FDQXZDLE9BQUE2QixlQUFBVSxFQUFBLFdBQXlDVCxZQUFBLEVBQUFLLFVBQ3pDLEVBQUFFLEdBQUEsaUJBQUFGLEVBQUEsUUFBQU0sS0FBQU4sRUFBQW5CLEVBQUFTLEVBQUFjLEVBQUFFLEVBQUEsU0FBQUEsR0FBZ0gsT0FBQU4sRUFBQU0sSUFBcUJDLEtBQUEsS0FBQUQsSUFDckksT0FBQUYsR0FJQXZCLEVBQUEyQixFQUFBLFNBQUF0QixHQUNBLElBQUFNLEVBQUFOLEtBQUFpQixXQUNBLFdBQTJCLE9BQUFqQixFQUFBLFNBQzNCLFdBQWlDLE9BQUFBLEdBRWpDLE9BREFMLEVBQUFTLEVBQUFFLEVBQUEsSUFBQUEsR0FDQUEsR0FJQVgsRUFBQVksRUFBQSxTQUFBZ0IsRUFBQUMsR0FBc0QsT0FBQTdDLE9BQUFDLFVBQUFDLGVBQUFDLEtBQUF5QyxFQUFBQyxJQUd0RDdCLEVBQUE4QixFQUFBLEdBRUEsSUFBQUMsRUFBQUMsT0FBQSxhQUFBQSxPQUFBLGlCQUNBQyxFQUFBRixFQUFBaEQsS0FBQTJDLEtBQUFLLEdBQ0FBLEVBQUFoRCxLQUFBWCxFQUNBMkQsSUFBQUcsUUFDQSxRQUFBdkQsRUFBQSxFQUFnQkEsRUFBQW9ELEVBQUFsRCxPQUF1QkYsSUFBQVAsRUFBQTJELEVBQUFwRCxJQUN2QyxJQUFBVSxFQUFBNEMsRUFJQTFDLEVBQUFSLEtBQUEsT0FFQVUsaTRDQ3ZKQTBDLEVBQUFDLHNEQUFBLElBQUFDLEVBQUFyQyxFQUFBLEdBS01zQyxFQUFZTixPQUNaTyxFQUFvQix3Q0FFMUIsU0FBU0MsRUFBbUJDLEVBQW1CL0MsR0FFN0MsT0FEQUEsRUFBT3lCLE1BQVF6QixFQUFPeUIsTUFBTXVCLFdBQ3JCQyxPQUFPQyxrQkFBa0JMLEVBQVcsb0JBQXFCRSxFQUFXL0MsR0FHN0UsU0FBU21ELEVBQW9CSixFQUFtQi9DLEdBQzlDLElBQU1vRCxFQUFjcEQsRUFFcEIsT0FEQW9ELEVBQVkzQixNQUFRMkIsRUFBWTNCLE1BQU00QixJQUFJLFNBQUNDLEdBQU0sT0FBQUEsRUFBRU4sYUFDNUNDLE9BQU9DLGtCQUFrQkwsRUFBVyxxQkFBc0JFLEVBQVdLLEdBMEM5RSxTQUFTRyxFQUNQQyxFQUNBVCxFQUNBVSxHQUVBLElBQU1DLEVBQWdCRixFQWdCdEIsT0FkSUEsRUFBU0csYUFDWEQsRUFBYUMsV0FBYUYsRUFDdEIsU0FBQ0csR0FBZSxPQTVDeEIsU0FBaUNiLEVBQW1CYSxHQUNsRCxJQUFNQyxFQUFrQkMsTUFBTUMsUUFBUUgsR0FBY0EsRUFBYSxDQUFDQSxHQUVsRSxPQUFPWCxPQUFPQyxrQkFDWkwsRUFDQSw4QkFDQUUsRUFDQWMsRUFBU1IsSUFBSSxTQUFDQyxHQUFNLE9BQUFBLEVBQUVOLGNBcUNGZ0IsQ0FBd0JqQixFQUFXYSxJQUNuRCxTQUFDQSxHQUFlLE9BakR4QixTQUE0QmIsRUFBbUJhLEdBQzdDLE9BQU9YLE9BQU9DLGtCQUFrQkwsRUFBVyx5QkFBMEJFLEVBQVdhLEVBQVdaLFlBZ0RyRWlCLENBQW1CbEIsRUFBV2EsS0FHcERGLEVBQWFRLGVBQWlCVixFQUFTVSxlQUNuQyxTQUFDTixHQUFlLE9BdEN0QixTQUFnQ2IsRUFBbUJhLEdBQ2pELE9BQU9YLE9BQU9DLGtCQUFrQkwsRUFBVyw2QkFBOEJFLEVBQVdhLEdBcUNoRU8sQ0FBdUJwQixFQUFXYSxJQUNsRCxLQUNKRixFQUFhVSxhQUFlWixFQUFTWSxhQUFlLFdBQU0sT0E1QjVELFNBQThCckIsR0FDNUJFLE9BQU9DLGtCQUFrQkwsRUFBVywyQkFBNEJFLEdBMkJOc0IsQ0FBcUJ0QixJQUFhLEtBQzVGVyxFQUFhWSxhQUFlZCxFQUFTYyxhQUFlLFdBQU0sT0F6QjVELFNBQThCdkIsR0FDNUJFLE9BQU9DLGtCQUFrQkwsRUFBVywyQkFBNEJFLEdBd0JOd0IsQ0FBcUJ4QixJQUFhLEtBQzVGVyxFQUFhYyxPQUFTaEIsRUFBU2dCLE9BQVMsV0FBTSxPQXRDaEQsU0FBd0J6QixHQUN0QkUsT0FBT0Msa0JBQWtCTCxFQUFXLHFCQUFzQkUsR0FxQ1owQixDQUFlMUIsSUFBYSxLQUMxRVcsRUFBYWdCLFFBQVVsQixFQUFTa0IsUUFBVSxXQUFNLE9BbkNsRCxTQUF5QjNCLEdBQ3ZCRSxPQUFPQyxrQkFBa0JMLEVBQVcsc0JBQXVCRSxHQWtDWDRCLENBQWdCNUIsSUFBYSxLQUM3RVcsRUFBYWtCLEtBQXlCLFVBQWxCcEIsRUFBU29CLE1BQTJCcEIsRUFBU29CLEtBQzFEbEIsRUFHVGQsRUFBVWlDLG1CQUFxQmpDLEVBQVVpQyxvQkFBc0IsR0FDL0RqQyxFQUFVaUMsbUJBQW1CQyxPQUFTbEMsRUFBVWlDLG1CQUFtQkMsUUFBVSxHQUM3RWxDLEVBQVVpQyxtQkFBbUJDLE9BQU9DLFlBQWNuQyxFQUFVaUMsbUJBQW1CQyxPQUFPQyxhQUFlLEdBRXJHbkMsRUFBVWlDLG1CQUFtQkMsT0FBT0MsWUFBWUMsS0FBTyxTQUNyRGpDLEVBQ0FrQyxFQUNBQyxFQUNBQyxHQUFvQixPQUFBQyxFQUFBM0MsT0FBQSwyRUFFTCxTQUFNRSxFQUFBMEMsUUFBS0MsS0FBS0wsRUFBT0MsRUFBU0MsV0FDL0MsT0FETW5GLEVBQVN1RixFQUFBQyxPQUNmLEdBQU0xQyxFQUFtQkMsRUFBVy9DLGtCQUFwQ3VGLEVBQUFDLGlCQUdGNUMsRUFBVWlDLG1CQUFtQkMsT0FBT0MsWUFBWVUsYUFBZSxTQUM3RDFDLEVBQ0EyQyxHQUFzQyxPQUFBTixFQUFBM0MsT0FBQSw2RUFJdkIsT0FGVGlCLEVBQWVILEVBQXdCbUMsRUFBYzNDLEdBQVcsR0FFdkQsR0FBTUosRUFBQTBDLFFBQUtDLEtBQUs1QixXQUMvQixPQURNMUQsRUFBU3VGLEVBQUFDLE9BQ2YsR0FBTTFDLEVBQW1CQyxFQUFXL0Msa0JBQXBDdUYsRUFBQUMsaUJBR0Y1QyxFQUFVaUMsbUJBQW1CQyxPQUFPQyxZQUFZWSxNQUFRLFNBQ3RENUMsRUFDQTZDLEVBQ0FDLEdBQWlDLE9BQUFULEVBQUEzQyxPQUFBLDZFQU1sQixPQUpUcUQsRUFBdUNGLEVBQVV2QyxJQUFJLFNBQUMwQyxFQUFVOUcsR0FDcEUsT0FBQXNFLEVBQXdCc0MsRUFBTTVHLEdBQUk4RyxHQUFVLEtBRy9CLEdBQU1wRCxFQUFBMEMsUUFBS1csTUFBTUYsV0FDaEMsT0FETTlGLEVBQVN1RixFQUFBQyxPQUNmLEdBQU1yQyxFQUFvQkosRUFBVy9DLGtCQUFyQ3VGLEVBQUFDLGlCQUdGNUMsRUFBVWlDLG1CQUFtQkMsT0FBT0MsWUFBWWtCLFVBQVksV0FDMUQsUUFBU3RELEVBQUEwQyxRQUFLYSxhQUdoQnRELEVBQVVpQyxtQkFBbUJDLE9BQU9DLFlBQVlvQixPQUFTLFNBQ3ZEcEQsRUFDQTJDLEdBQXNDLE9BQUFOLEVBQUEzQyxPQUFBLDJEQUVoQ2lCLEVBQWVILEVBQXdCbUMsRUFBYzNDLEdBQVcsR0FDdEVKLEVBQUEwQyxRQUFLZSxPQUFPMUMsWUFHZGQsRUFBVWlDLG1CQUFtQkMsT0FBT0MsWUFBWXNCLE1BQVEsU0FBQ3RELEdBQ3ZESixFQUFBMEMsUUFBS2lCLE1BQU0sV0FBTSxPQTlFbkIsU0FBNEJ2RCxHQUMxQkUsT0FBT0Msa0JBQWtCTCxFQUFXLHlCQUEwQkUsR0E2RTdDd0QsQ0FBbUJ4RCxNQUd0Q0gsRUFBVWlDLG1CQUFtQkMsT0FBT0MsWUFBWXlCLGNBQWdCLFdBQzlEN0QsRUFBQTBDLFFBQUtvQixpQkFHUDdELEVBQVVpQyxtQkFBbUJDLE9BQU9DLFlBQVkyQixlQUFpQixXQUMvRC9ELEVBQUEwQyxRQUFLc0Isa0JBR1AvRCxFQUFVaUMsbUJBQW1CQyxPQUFPQyxZQUFZNkIsWUFBYyxXQUM1RGpFLEVBQUEwQyxRQUFLd0IsZUFHUGpFLEVBQVVpQyxtQkFBbUJDLE9BQU9DLFlBQVkrQixZQUFjLFdBQzVEbkUsRUFBQTBDLFFBQUswQixlQUdQbkUsRUFBVWlDLG1CQUFtQkMsT0FBT0MsWUFBWStCLFlBQWMsV0FDNUQsT0FBT25FLEVBQUEwQyxRQUFLMkIsYUFHZHBFLEVBQVVpQyxtQkFBbUJDLE9BQU9DLFlBQVlrQyxhQUFlLFdBQzdEdEUsRUFBQTBDLFFBQUs2QixnQkFHUHRFLEVBQVVpQyxtQkFBbUJDLE9BQU9DLFlBQVlvQyxZQUFjLFdBQzVEeEUsRUFBQTBDLFFBQUsrQixlQUdQeEUsRUFBVWlDLG1CQUFtQkMsT0FBT0MsWUFBWXNDLHNCQUF3QixTQUFDQyxHQUN2RTNFLEVBQUEwQyxRQUFLa0Msc0JBQXNCRCxJQUc3QjFFLEVBQVVpQyxtQkFBbUJDLE9BQU9DLFlBQVl5Qyx1QkFBeUIsV0FDdkU3RSxFQUFBMEMsUUFBS29DLDBCQUdQN0UsRUFBVWlDLG1CQUFtQkMsT0FBT0MsWUFBWTJDLGFBQWUsV0FDN0QvRSxFQUFBMEMsUUFBS3NDLGdCQUdQL0UsRUFBVWlDLG1CQUFtQkMsT0FBT0MsWUFBWTZDLFlBQWMsV0FDNURqRixFQUFBMEMsUUFBS3dDLGVBR1BqRixFQUFVaUMsbUJBQW1CQyxPQUFPQyxZQUFZK0MsYUFBZSxXQUM3RCxPQUFPbkYsRUFBQTBDLFFBQUswQyxnQkFHZG5GLEVBQVVpQyxtQkFBbUJDLE9BQU9DLFlBQVlpRCxVQUFZLFdBQzFELE9BQU9yRixFQUFBMEMsUUFBSzRDLGFBR2RyRixFQUFVaUMsbUJBQW1CQyxPQUFPQyxZQUFZbUQsWUFBYyxXQUM1RCxPQUFPdkYsRUFBQTBDLFFBQUs4QyxlQUdkdkYsRUFBVWlDLG1CQUFtQkMsT0FBT0MsWUFBWXFELFlBQWMsV0FDNUQsT0FBT3pGLEVBQUEwQyxRQUFLZ0QsZUFHZHpGLEVBQVVpQyxtQkFBbUJDLE9BQU9DLFlBQVl1RCxnQkFBa0IsV0FDaEUsT0FBTzNGLEVBQUEwQyxRQUFLa0Qsa0JBR2QzRixFQUFVaUMsbUJBQW1CQyxPQUFPQyxZQUFZeUQsY0FBZ0IsU0FBQ3ZHLEdBQy9ELE9BQU9VLEVBQUEwQyxRQUFLb0QsY0FBY3hHLElBRzVCVyxFQUFVaUMsbUJBQW1CQyxPQUFPQyxZQUFZMkQsYUFBZSxXQUM3RCxPQUFPL0YsRUFBQTBDLFFBQUtzRCxnQkFHZC9GLEVBQVVpQyxtQkFBbUJDLE9BQU9DLFlBQVk2RCxnQkFBa0IsU0FDaEU3RixFQUNBOEYsRUFDQUMsR0FFQSxJQUFNQyxFQUFleEYsRUFBd0JzRixFQUFNOUYsR0FBVyxHQUM5RCxPQUFPSixFQUFBMEMsUUFBSzJELGdCQUFnQkQsRUFBY0QsSUFHNUNsRyxFQUFVaUMsbUJBQW1CQyxPQUFPQyxZQUFZa0UsZ0JBQWtCLFNBQUNILEdBQ2pFbkcsRUFBQTBDLFFBQUs2RCxnQkFBZ0JKLElBR3ZCbEcsRUFBVWlDLG1CQUFtQkMsT0FBT0MsWUFBWW9FLGtCQUFvQixXQUNsRXhHLEVBQUEwQyxRQUFLK0QscUJBR1B4RyxFQUFVaUMsbUJBQW1CQyxPQUFPQyxZQUFZc0Usa0JBQW9CLFdBQ2xFMUcsRUFBQTBDLFFBQUtpRSxxQkFHUDFHLEVBQVVpQyxtQkFBbUJDLE9BQU9DLFlBQVl3RSxnQkFBa0IsU0FBQ0MsR0FDakUsT0FBTzdHLEVBQUEwQyxRQUFLb0UsaUJBQWlCRCxJQUcvQjVHLEVBQVVpQyxtQkFBbUJDLE9BQU9DLFlBQVkyRSxvQkFBc0IsU0FBQ0YsR0FDckUsT0FBTzdHLEVBQUEwQyxRQUFLc0UscUJBQXFCSCIsImZpbGUiOiJtYWluLmJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIGluc3RhbGwgYSBKU09OUCBjYWxsYmFjayBmb3IgY2h1bmsgbG9hZGluZ1xuIFx0ZnVuY3Rpb24gd2VicGFja0pzb25wQ2FsbGJhY2soZGF0YSkge1xuIFx0XHR2YXIgY2h1bmtJZHMgPSBkYXRhWzBdO1xuIFx0XHR2YXIgbW9yZU1vZHVsZXMgPSBkYXRhWzFdO1xuIFx0XHR2YXIgZXhlY3V0ZU1vZHVsZXMgPSBkYXRhWzJdO1xuXG4gXHRcdC8vIGFkZCBcIm1vcmVNb2R1bGVzXCIgdG8gdGhlIG1vZHVsZXMgb2JqZWN0LFxuIFx0XHQvLyB0aGVuIGZsYWcgYWxsIFwiY2h1bmtJZHNcIiBhcyBsb2FkZWQgYW5kIGZpcmUgY2FsbGJhY2tcbiBcdFx0dmFyIG1vZHVsZUlkLCBjaHVua0lkLCBpID0gMCwgcmVzb2x2ZXMgPSBbXTtcbiBcdFx0Zm9yKDtpIDwgY2h1bmtJZHMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHRjaHVua0lkID0gY2h1bmtJZHNbaV07XG4gXHRcdFx0aWYoaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdKSB7XG4gXHRcdFx0XHRyZXNvbHZlcy5wdXNoKGluc3RhbGxlZENodW5rc1tjaHVua0lkXVswXSk7XG4gXHRcdFx0fVxuIFx0XHRcdGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9IDA7XG4gXHRcdH1cbiBcdFx0Zm9yKG1vZHVsZUlkIGluIG1vcmVNb2R1bGVzKSB7XG4gXHRcdFx0aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vcmVNb2R1bGVzLCBtb2R1bGVJZCkpIHtcbiBcdFx0XHRcdG1vZHVsZXNbbW9kdWxlSWRdID0gbW9yZU1vZHVsZXNbbW9kdWxlSWRdO1xuIFx0XHRcdH1cbiBcdFx0fVxuIFx0XHRpZihwYXJlbnRKc29ucEZ1bmN0aW9uKSBwYXJlbnRKc29ucEZ1bmN0aW9uKGRhdGEpO1xuXG4gXHRcdHdoaWxlKHJlc29sdmVzLmxlbmd0aCkge1xuIFx0XHRcdHJlc29sdmVzLnNoaWZ0KCkoKTtcbiBcdFx0fVxuXG4gXHRcdC8vIGFkZCBlbnRyeSBtb2R1bGVzIGZyb20gbG9hZGVkIGNodW5rIHRvIGRlZmVycmVkIGxpc3RcbiBcdFx0ZGVmZXJyZWRNb2R1bGVzLnB1c2guYXBwbHkoZGVmZXJyZWRNb2R1bGVzLCBleGVjdXRlTW9kdWxlcyB8fCBbXSk7XG5cbiBcdFx0Ly8gcnVuIGRlZmVycmVkIG1vZHVsZXMgd2hlbiBhbGwgY2h1bmtzIHJlYWR5XG4gXHRcdHJldHVybiBjaGVja0RlZmVycmVkTW9kdWxlcygpO1xuIFx0fTtcbiBcdGZ1bmN0aW9uIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCkge1xuIFx0XHR2YXIgcmVzdWx0O1xuIFx0XHRmb3IodmFyIGkgPSAwOyBpIDwgZGVmZXJyZWRNb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG4gXHRcdFx0dmFyIGRlZmVycmVkTW9kdWxlID0gZGVmZXJyZWRNb2R1bGVzW2ldO1xuIFx0XHRcdHZhciBmdWxmaWxsZWQgPSB0cnVlO1xuIFx0XHRcdGZvcih2YXIgaiA9IDE7IGogPCBkZWZlcnJlZE1vZHVsZS5sZW5ndGg7IGorKykge1xuIFx0XHRcdFx0dmFyIGRlcElkID0gZGVmZXJyZWRNb2R1bGVbal07XG4gXHRcdFx0XHRpZihpbnN0YWxsZWRDaHVua3NbZGVwSWRdICE9PSAwKSBmdWxmaWxsZWQgPSBmYWxzZTtcbiBcdFx0XHR9XG4gXHRcdFx0aWYoZnVsZmlsbGVkKSB7XG4gXHRcdFx0XHRkZWZlcnJlZE1vZHVsZXMuc3BsaWNlKGktLSwgMSk7XG4gXHRcdFx0XHRyZXN1bHQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IGRlZmVycmVkTW9kdWxlWzBdKTtcbiBcdFx0XHR9XG4gXHRcdH1cblxuIFx0XHRyZXR1cm4gcmVzdWx0O1xuIFx0fVxuXG4gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuIFx0Ly8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4gXHQvLyBQcm9taXNlID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxuIFx0dmFyIGluc3RhbGxlZENodW5rcyA9IHtcbiBcdFx0MDogMFxuIFx0fTtcblxuIFx0dmFyIGRlZmVycmVkTW9kdWxlcyA9IFtdO1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG4gXHR2YXIganNvbnBBcnJheSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSB8fCBbXTtcbiBcdHZhciBvbGRKc29ucEZ1bmN0aW9uID0ganNvbnBBcnJheS5wdXNoLmJpbmQoanNvbnBBcnJheSk7XG4gXHRqc29ucEFycmF5LnB1c2ggPSB3ZWJwYWNrSnNvbnBDYWxsYmFjaztcbiBcdGpzb25wQXJyYXkgPSBqc29ucEFycmF5LnNsaWNlKCk7XG4gXHRmb3IodmFyIGkgPSAwOyBpIDwganNvbnBBcnJheS5sZW5ndGg7IGkrKykgd2VicGFja0pzb25wQ2FsbGJhY2soanNvbnBBcnJheVtpXSk7XG4gXHR2YXIgcGFyZW50SnNvbnBGdW5jdGlvbiA9IG9sZEpzb25wRnVuY3Rpb247XG5cblxuIFx0Ly8gYWRkIGVudHJ5IG1vZHVsZSB0byBkZWZlcnJlZCBsaXN0XG4gXHRkZWZlcnJlZE1vZHVsZXMucHVzaChbMCwxXSk7XG4gXHQvLyBydW4gZGVmZXJyZWQgbW9kdWxlcyB3aGVuIHJlYWR5XG4gXHRyZXR1cm4gY2hlY2tEZWZlcnJlZE1vZHVsZXMoKTtcbiIsImltcG9ydCBTd2FsLCB7IFN3ZWV0QWxlcnRPcHRpb25zLCBTd2VldEFsZXJ0UmVzdWx0LCBTd2VldEFsZXJ0VHlwZSB9IGZyb20gXCJzd2VldGFsZXJ0MlwiO1xyXG5pbXBvcnQgSVNpbXBsZVN3ZWV0QWxlcnRPcHRpb25zIGZyb20gXCIuL1NpbXBsZVN3ZWV0QWxlcnRPcHRpb25zXCI7XHJcbmltcG9ydCBJU3dlZXRBbGVydFF1ZXVlUmVzdWx0IGZyb20gXCIuL1N3ZWV0QWxlcnRRdWV1ZVJlc3VsdFwiO1xyXG5cclxuZGVjbGFyZSB2YXIgRG90TmV0OiBhbnk7XHJcbmNvbnN0IGRvbVdpbmRvdyA9IHdpbmRvdyBhcyBhbnk7XHJcbmNvbnN0IG5hbWVzcGFjZTogc3RyaW5nID0gXCJDdXJyaWVUZWNobm9sb2dpZXMuQmxhem9yLlN3ZWV0QWxlcnQyXCI7XHJcblxyXG5mdW5jdGlvbiBkaXNwYXRjaEZpcmVSZXN1bHQocmVxdWVzdElkOiBzdHJpbmcsIHJlc3VsdDogU3dlZXRBbGVydFJlc3VsdCk6IFByb21pc2U8dm9pZD4ge1xyXG4gIHJlc3VsdC52YWx1ZSA9IHJlc3VsdC52YWx1ZS50b1N0cmluZygpO1xyXG4gIHJldHVybiBEb3ROZXQuaW52b2tlTWV0aG9kQXN5bmMobmFtZXNwYWNlLCBcIlJlY2VpdmVGaXJlUmVzdWx0XCIsIHJlcXVlc3RJZCwgcmVzdWx0KTtcclxufVxyXG5cclxuZnVuY3Rpb24gZGlzcGF0Y2hRdWV1ZVJlc3VsdChyZXF1ZXN0SWQ6IHN0cmluZywgcmVzdWx0OiBTd2VldEFsZXJ0UmVzdWx0KTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgY29uc3QgcXVldWVSZXN1bHQgPSByZXN1bHQgYXMgSVN3ZWV0QWxlcnRRdWV1ZVJlc3VsdDtcclxuICBxdWV1ZVJlc3VsdC52YWx1ZSA9IHF1ZXVlUmVzdWx0LnZhbHVlLm1hcCgodikgPT4gdi50b1N0cmluZygpKTtcclxuICByZXR1cm4gRG90TmV0Lmludm9rZU1ldGhvZEFzeW5jKG5hbWVzcGFjZSwgXCJSZWNlaXZlUXVldWVSZXN1bHRcIiwgcmVxdWVzdElkLCBxdWV1ZVJlc3VsdCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRpc3BhdGNoUHJlQ29uZmlybShyZXF1ZXN0SWQ6IHN0cmluZywgaW5wdXRWYWx1ZTogYW55KTogUHJvbWlzZTxhbnk+IHtcclxuICByZXR1cm4gRG90TmV0Lmludm9rZU1ldGhvZEFzeW5jKG5hbWVzcGFjZSwgXCJSZWNlaXZlUHJlQ29uZmlybUlucHV0XCIsIHJlcXVlc3RJZCwgaW5wdXRWYWx1ZS50b1N0cmluZygpKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZGlzcGF0Y2hRdWV1ZVByZUNvbmZpcm0ocmVxdWVzdElkOiBzdHJpbmcsIGlucHV0VmFsdWU6IGFueSk6IFByb21pc2U8YW55PiB7XHJcbiAgY29uc3QgdmFsQXJyYXk6IGFueVtdID0gQXJyYXkuaXNBcnJheShpbnB1dFZhbHVlKSA/IGlucHV0VmFsdWUgOiBbaW5wdXRWYWx1ZV07XHJcblxyXG4gIHJldHVybiBEb3ROZXQuaW52b2tlTWV0aG9kQXN5bmMoXHJcbiAgICBuYW1lc3BhY2UsXHJcbiAgICBcIlJlY2VpdmVQcmVDb25maXJtUXVldWVJbnB1dFwiLFxyXG4gICAgcmVxdWVzdElkLFxyXG4gICAgdmFsQXJyYXkubWFwKCh2KSA9PiB2LnRvU3RyaW5nKCkpLFxyXG4gICk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRpc3BhdGNoSW5wdXRWYWxpZGF0b3IocmVxdWVzdElkOiBzdHJpbmcsIGlucHV0VmFsdWU6IGFueSk6IFByb21pc2U8c3RyaW5nPiB7XHJcbiAgcmV0dXJuIERvdE5ldC5pbnZva2VNZXRob2RBc3luYyhuYW1lc3BhY2UsIFwiUmVjZWl2ZUlucHV0VmFsaWRhdG9ySW5wdXRcIiwgcmVxdWVzdElkLCBpbnB1dFZhbHVlKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZGlzcGF0Y2hPbk9wZW4ocmVxdWVzdElkOiBzdHJpbmcpOiB2b2lkIHtcclxuICBEb3ROZXQuaW52b2tlTWV0aG9kQXN5bmMobmFtZXNwYWNlLCBcIlJlY2VpdmVPbk9wZW5JbnB1dFwiLCByZXF1ZXN0SWQpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBkaXNwYXRjaE9uQ2xvc2UocmVxdWVzdElkOiBzdHJpbmcpOiB2b2lkIHtcclxuICBEb3ROZXQuaW52b2tlTWV0aG9kQXN5bmMobmFtZXNwYWNlLCBcIlJlY2VpdmVPbkNsb3NlSW5wdXRcIiwgcmVxdWVzdElkKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZGlzcGF0Y2hPbkJlZm9yZU9wZW4ocmVxdWVzdElkOiBzdHJpbmcpOiB2b2lkIHtcclxuICBEb3ROZXQuaW52b2tlTWV0aG9kQXN5bmMobmFtZXNwYWNlLCBcIlJlY2VpdmVPbkJlZm9yZU9wZW5JbnB1dFwiLCByZXF1ZXN0SWQpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBkaXNwYXRjaE9uQWZ0ZXJDbG9zZShyZXF1ZXN0SWQ6IHN0cmluZyk6IHZvaWQge1xyXG4gIERvdE5ldC5pbnZva2VNZXRob2RBc3luYyhuYW1lc3BhY2UsIFwiUmVjZWl2ZU9uQWZ0ZXJDbG9zZUlucHV0XCIsIHJlcXVlc3RJZCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRpc3BhdGNoT25Db21wbGV0ZShyZXF1ZXN0SWQ6IHN0cmluZyk6IHZvaWQge1xyXG4gIERvdE5ldC5pbnZva2VNZXRob2RBc3luYyhuYW1lc3BhY2UsIFwiUmVjZWl2ZU9uQ29tcGxldGVJbnB1dFwiLCByZXF1ZXN0SWQpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRTd2FsU2V0dGluZ3NGcm9tUG9jbyhcclxuICBzZXR0aW5nczogSVNpbXBsZVN3ZWV0QWxlcnRPcHRpb25zLFxyXG4gIHJlcXVlc3RJZDogc3RyaW5nLFxyXG4gIGlzUXVldWU6IGJvb2xlYW4sXHJcbik6IFN3ZWV0QWxlcnRPcHRpb25zIHtcclxuICBjb25zdCBzd2FsU2V0dGluZ3MgPSAoc2V0dGluZ3MgYXMgYW55KSBhcyBTd2VldEFsZXJ0T3B0aW9ucztcclxuXHJcbiAgaWYgKHNldHRpbmdzLnByZUNvbmZpcm0pIHtcclxuICAgIHN3YWxTZXR0aW5ncy5wcmVDb25maXJtID0gaXNRdWV1ZVxyXG4gICAgICA/IChpbnB1dFZhbHVlKSA9PiBkaXNwYXRjaFF1ZXVlUHJlQ29uZmlybShyZXF1ZXN0SWQsIGlucHV0VmFsdWUpXHJcbiAgICAgIDogKGlucHV0VmFsdWUpID0+IGRpc3BhdGNoUHJlQ29uZmlybShyZXF1ZXN0SWQsIGlucHV0VmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgc3dhbFNldHRpbmdzLmlucHV0VmFsaWRhdG9yID0gc2V0dGluZ3MuaW5wdXRWYWxpZGF0b3JcclxuICAgID8gKGlucHV0VmFsdWUpID0+IGRpc3BhdGNoSW5wdXRWYWxpZGF0b3IocmVxdWVzdElkLCBpbnB1dFZhbHVlKVxyXG4gICAgOiBudWxsO1xyXG4gIHN3YWxTZXR0aW5ncy5vbkJlZm9yZU9wZW4gPSBzZXR0aW5ncy5vbkJlZm9yZU9wZW4gPyAoKSA9PiBkaXNwYXRjaE9uQmVmb3JlT3BlbihyZXF1ZXN0SWQpIDogbnVsbDtcclxuICBzd2FsU2V0dGluZ3Mub25BZnRlckNsb3NlID0gc2V0dGluZ3Mub25BZnRlckNsb3NlID8gKCkgPT4gZGlzcGF0Y2hPbkFmdGVyQ2xvc2UocmVxdWVzdElkKSA6IG51bGw7XHJcbiAgc3dhbFNldHRpbmdzLm9uT3BlbiA9IHNldHRpbmdzLm9uT3BlbiA/ICgpID0+IGRpc3BhdGNoT25PcGVuKHJlcXVlc3RJZCkgOiBudWxsO1xyXG4gIHN3YWxTZXR0aW5ncy5vbkNsb3NlID0gc2V0dGluZ3Mub25DbG9zZSA/ICgpID0+IGRpc3BhdGNoT25DbG9zZShyZXF1ZXN0SWQpIDogbnVsbDtcclxuICBzd2FsU2V0dGluZ3MuZ3JvdyA9IHNldHRpbmdzLmdyb3cgPT09IFwiZmFsc2VcIiA/IGZhbHNlIDogc2V0dGluZ3MuZ3JvdztcclxuICByZXR1cm4gc3dhbFNldHRpbmdzO1xyXG59XHJcblxyXG5kb21XaW5kb3cuQ3VycmllVGVjaG5vbG9naWVzID0gZG9tV2luZG93LkN1cnJpZVRlY2hub2xvZ2llcyB8fCB7fTtcclxuZG9tV2luZG93LkN1cnJpZVRlY2hub2xvZ2llcy5CbGF6b3IgPSBkb21XaW5kb3cuQ3VycmllVGVjaG5vbG9naWVzLkJsYXpvciB8fCB7fTtcclxuZG9tV2luZG93LkN1cnJpZVRlY2hub2xvZ2llcy5CbGF6b3IuU3dlZXRBbGVydDIgPSBkb21XaW5kb3cuQ3VycmllVGVjaG5vbG9naWVzLkJsYXpvci5Td2VldEFsZXJ0MiB8fCB7fTtcclxuXHJcbmRvbVdpbmRvdy5DdXJyaWVUZWNobm9sb2dpZXMuQmxhem9yLlN3ZWV0QWxlcnQyLkZpcmUgPSBhc3luYyAoXHJcbiAgcmVxdWVzdElkOiBzdHJpbmcsXHJcbiAgdGl0bGU6IHN0cmluZyxcclxuICBtZXNzYWdlOiBzdHJpbmcsXHJcbiAgdHlwZTogU3dlZXRBbGVydFR5cGUsXHJcbikgPT4ge1xyXG4gIGNvbnN0IHJlc3VsdCA9IGF3YWl0IFN3YWwuZmlyZSh0aXRsZSwgbWVzc2FnZSwgdHlwZSk7XHJcbiAgYXdhaXQgZGlzcGF0Y2hGaXJlUmVzdWx0KHJlcXVlc3RJZCwgcmVzdWx0KTtcclxufTtcclxuXHJcbmRvbVdpbmRvdy5DdXJyaWVUZWNobm9sb2dpZXMuQmxhem9yLlN3ZWV0QWxlcnQyLkZpcmVTZXR0aW5ncyA9IGFzeW5jIChcclxuICByZXF1ZXN0SWQ6IHN0cmluZyxcclxuICBzZXR0aW5nc1BvY286IElTaW1wbGVTd2VldEFsZXJ0T3B0aW9ucyxcclxuKSA9PiB7XHJcbiAgY29uc3Qgc3dhbFNldHRpbmdzID0gZ2V0U3dhbFNldHRpbmdzRnJvbVBvY28oc2V0dGluZ3NQb2NvLCByZXF1ZXN0SWQsIGZhbHNlKTtcclxuXHJcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgU3dhbC5maXJlKHN3YWxTZXR0aW5ncyk7XHJcbiAgYXdhaXQgZGlzcGF0Y2hGaXJlUmVzdWx0KHJlcXVlc3RJZCwgcmVzdWx0KTtcclxufTtcclxuXHJcbmRvbVdpbmRvdy5DdXJyaWVUZWNobm9sb2dpZXMuQmxhem9yLlN3ZWV0QWxlcnQyLlF1ZXVlID0gYXN5bmMgKFxyXG4gIHJlcXVlc3RJZDogc3RyaW5nLFxyXG4gIG9wdGlvbklkczogc3RyaW5nW10sXHJcbiAgc3RlcHM6IElTaW1wbGVTd2VldEFsZXJ0T3B0aW9uc1tdLFxyXG4pID0+IHtcclxuICBjb25zdCBhcnJTd2FsU2V0dGluZ3M6IFN3ZWV0QWxlcnRPcHRpb25zW10gPSBvcHRpb25JZHMubWFwKChvcHRpb25JZCwgaSkgPT5cclxuICAgIGdldFN3YWxTZXR0aW5nc0Zyb21Qb2NvKHN0ZXBzW2ldLCBvcHRpb25JZCwgdHJ1ZSksXHJcbiAgKTtcclxuXHJcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgU3dhbC5xdWV1ZShhcnJTd2FsU2V0dGluZ3MpO1xyXG4gIGF3YWl0IGRpc3BhdGNoUXVldWVSZXN1bHQocmVxdWVzdElkLCByZXN1bHQpO1xyXG59O1xyXG5cclxuZG9tV2luZG93LkN1cnJpZVRlY2hub2xvZ2llcy5CbGF6b3IuU3dlZXRBbGVydDIuSXNWaXNpYmxlID0gKCk6IGJvb2xlYW4gPT4ge1xyXG4gIHJldHVybiAhIVN3YWwuaXNWaXNpYmxlKCk7XHJcbn07XHJcblxyXG5kb21XaW5kb3cuQ3VycmllVGVjaG5vbG9naWVzLkJsYXpvci5Td2VldEFsZXJ0Mi5VcGRhdGUgPSBhc3luYyAoXHJcbiAgcmVxdWVzdElkOiBzdHJpbmcsXHJcbiAgc2V0dGluZ3NQb2NvOiBJU2ltcGxlU3dlZXRBbGVydE9wdGlvbnMsXHJcbikgPT4ge1xyXG4gIGNvbnN0IHN3YWxTZXR0aW5ncyA9IGdldFN3YWxTZXR0aW5nc0Zyb21Qb2NvKHNldHRpbmdzUG9jbywgcmVxdWVzdElkLCBmYWxzZSk7XHJcbiAgU3dhbC51cGRhdGUoc3dhbFNldHRpbmdzKTtcclxufTtcclxuXHJcbmRvbVdpbmRvdy5DdXJyaWVUZWNobm9sb2dpZXMuQmxhem9yLlN3ZWV0QWxlcnQyLkNsb3NlID0gKHJlcXVlc3RJZDogc3RyaW5nKTogdm9pZCA9PiB7XHJcbiAgU3dhbC5jbG9zZSgoKSA9PiBkaXNwYXRjaE9uQ29tcGxldGUocmVxdWVzdElkKSk7XHJcbn07XHJcblxyXG5kb21XaW5kb3cuQ3VycmllVGVjaG5vbG9naWVzLkJsYXpvci5Td2VldEFsZXJ0Mi5FbmFibGVCdXR0b25zID0gKCk6IHZvaWQgPT4ge1xyXG4gIFN3YWwuZW5hYmxlQnV0dG9ucygpO1xyXG59O1xyXG5cclxuZG9tV2luZG93LkN1cnJpZVRlY2hub2xvZ2llcy5CbGF6b3IuU3dlZXRBbGVydDIuRGlzYWJsZUJ1dHRvbnMgPSAoKTogdm9pZCA9PiB7XHJcbiAgU3dhbC5kaXNhYmxlQnV0dG9ucygpO1xyXG59O1xyXG5cclxuZG9tV2luZG93LkN1cnJpZVRlY2hub2xvZ2llcy5CbGF6b3IuU3dlZXRBbGVydDIuU2hvd0xvYWRpbmcgPSAoKTogdm9pZCA9PiB7XHJcbiAgU3dhbC5zaG93TG9hZGluZygpO1xyXG59O1xyXG5cclxuZG9tV2luZG93LkN1cnJpZVRlY2hub2xvZ2llcy5CbGF6b3IuU3dlZXRBbGVydDIuSGlkZUxvYWRpbmcgPSAoKTogdm9pZCA9PiB7XHJcbiAgU3dhbC5oaWRlTG9hZGluZygpO1xyXG59O1xyXG5cclxuZG9tV2luZG93LkN1cnJpZVRlY2hub2xvZ2llcy5CbGF6b3IuU3dlZXRBbGVydDIuSGlkZUxvYWRpbmcgPSAoKTogYm9vbGVhbiA9PiB7XHJcbiAgcmV0dXJuIFN3YWwuaXNMb2FkaW5nKCk7XHJcbn07XHJcblxyXG5kb21XaW5kb3cuQ3VycmllVGVjaG5vbG9naWVzLkJsYXpvci5Td2VldEFsZXJ0Mi5DbGlja0NvbmZpcm0gPSAoKTogdm9pZCA9PiB7XHJcbiAgU3dhbC5jbGlja0NvbmZpcm0oKTtcclxufTtcclxuXHJcbmRvbVdpbmRvdy5DdXJyaWVUZWNobm9sb2dpZXMuQmxhem9yLlN3ZWV0QWxlcnQyLkNsaWNrQ2FuY2VsID0gKCk6IHZvaWQgPT4ge1xyXG4gIFN3YWwuY2xpY2tDYW5jZWwoKTtcclxufTtcclxuXHJcbmRvbVdpbmRvdy5DdXJyaWVUZWNobm9sb2dpZXMuQmxhem9yLlN3ZWV0QWxlcnQyLlNob3dWYWxpZGF0aW9uTWVzc2FnZSA9ICh2YWxpZGF0aW9uTWVzc2FnZTogc3RyaW5nKTogdm9pZCA9PiB7XHJcbiAgU3dhbC5zaG93VmFsaWRhdGlvbk1lc3NhZ2UodmFsaWRhdGlvbk1lc3NhZ2UpO1xyXG59O1xyXG5cclxuZG9tV2luZG93LkN1cnJpZVRlY2hub2xvZ2llcy5CbGF6b3IuU3dlZXRBbGVydDIuUmVzZXRWYWxpZGF0aW9uTWVzc2FnZSA9ICgpOiB2b2lkID0+IHtcclxuICBTd2FsLnJlc2V0VmFsaWRhdGlvbk1lc3NhZ2UoKTtcclxufTtcclxuXHJcbmRvbVdpbmRvdy5DdXJyaWVUZWNobm9sb2dpZXMuQmxhem9yLlN3ZWV0QWxlcnQyLkRpc2FibGVJbnB1dCA9ICgpOiB2b2lkID0+IHtcclxuICBTd2FsLmRpc2FibGVJbnB1dCgpO1xyXG59O1xyXG5cclxuZG9tV2luZG93LkN1cnJpZVRlY2hub2xvZ2llcy5CbGF6b3IuU3dlZXRBbGVydDIuRW5hYmxlSW5wdXQgPSAoKTogdm9pZCA9PiB7XHJcbiAgU3dhbC5lbmFibGVJbnB1dCgpO1xyXG59O1xyXG5cclxuZG9tV2luZG93LkN1cnJpZVRlY2hub2xvZ2llcy5CbGF6b3IuU3dlZXRBbGVydDIuR2V0VGltZXJMZWZ0ID0gKCk6IG51bWJlciB8IHVuZGVmaW5lZCA9PiB7XHJcbiAgcmV0dXJuIFN3YWwuZ2V0VGltZXJMZWZ0KCk7XHJcbn07XHJcblxyXG5kb21XaW5kb3cuQ3VycmllVGVjaG5vbG9naWVzLkJsYXpvci5Td2VldEFsZXJ0Mi5TdG9wVGltZXIgPSAoKTogbnVtYmVyIHwgdW5kZWZpbmVkID0+IHtcclxuICByZXR1cm4gU3dhbC5zdG9wVGltZXIoKTtcclxufTtcclxuXHJcbmRvbVdpbmRvdy5DdXJyaWVUZWNobm9sb2dpZXMuQmxhem9yLlN3ZWV0QWxlcnQyLlJlc3VtZVRpbWVyID0gKCk6IG51bWJlciB8IHVuZGVmaW5lZCA9PiB7XHJcbiAgcmV0dXJuIFN3YWwucmVzdW1lVGltZXIoKTtcclxufTtcclxuXHJcbmRvbVdpbmRvdy5DdXJyaWVUZWNobm9sb2dpZXMuQmxhem9yLlN3ZWV0QWxlcnQyLlRvZ2dsZVRpbWVyID0gKCk6IG51bWJlciB8IHVuZGVmaW5lZCA9PiB7XHJcbiAgcmV0dXJuIFN3YWwudG9nZ2xlVGltZXIoKTtcclxufTtcclxuXHJcbmRvbVdpbmRvdy5DdXJyaWVUZWNobm9sb2dpZXMuQmxhem9yLlN3ZWV0QWxlcnQyLklzVGltbWVyUnVubmluZyA9ICgpOiBib29sZWFuIHwgdW5kZWZpbmVkID0+IHtcclxuICByZXR1cm4gU3dhbC5pc1RpbWVyUnVubmluZygpO1xyXG59O1xyXG5cclxuZG9tV2luZG93LkN1cnJpZVRlY2hub2xvZ2llcy5CbGF6b3IuU3dlZXRBbGVydDIuSW5jcmVhc2VUaW1lciA9IChuOiBudW1iZXIpOiBudW1iZXIgfCB1bmRlZmluZWQgPT4ge1xyXG4gIHJldHVybiBTd2FsLmluY3JlYXNlVGltZXIobik7XHJcbn07XHJcblxyXG5kb21XaW5kb3cuQ3VycmllVGVjaG5vbG9naWVzLkJsYXpvci5Td2VldEFsZXJ0Mi5HZXRRdWV1ZVN0ZXAgPSAoKTogc3RyaW5nID0+IHtcclxuICByZXR1cm4gU3dhbC5nZXRRdWV1ZVN0ZXAoKTtcclxufTtcclxuXHJcbmRvbVdpbmRvdy5DdXJyaWVUZWNobm9sb2dpZXMuQmxhem9yLlN3ZWV0QWxlcnQyLkluc2VydFF1ZXVlU3RlcCA9IChcclxuICByZXF1ZXN0SWQ6IHN0cmluZyxcclxuICBzdGVwOiBJU2ltcGxlU3dlZXRBbGVydE9wdGlvbnMsXHJcbiAgaW5kZXg/OiBudW1iZXIsXHJcbik6IG51bWJlciA9PiB7XHJcbiAgY29uc3Qgc3RlcFNldHRpbmdzID0gZ2V0U3dhbFNldHRpbmdzRnJvbVBvY28oc3RlcCwgcmVxdWVzdElkLCB0cnVlKTtcclxuICByZXR1cm4gU3dhbC5pbnNlcnRRdWV1ZVN0ZXAoc3RlcFNldHRpbmdzLCBpbmRleCk7XHJcbn07XHJcblxyXG5kb21XaW5kb3cuQ3VycmllVGVjaG5vbG9naWVzLkJsYXpvci5Td2VldEFsZXJ0Mi5EZWxldGVRdWV1ZVN0ZXAgPSAoaW5kZXg6IG51bWJlcik6IHZvaWQgPT4ge1xyXG4gIFN3YWwuZGVsZXRlUXVldWVTdGVwKGluZGV4KTtcclxufTtcclxuXHJcbmRvbVdpbmRvdy5DdXJyaWVUZWNobm9sb2dpZXMuQmxhem9yLlN3ZWV0QWxlcnQyLlNob3dQcm9ncmVzc1N0ZXBzID0gKCk6IHZvaWQgPT4ge1xyXG4gIFN3YWwuc2hvd1Byb2dyZXNzU3RlcHMoKTtcclxufTtcclxuXHJcbmRvbVdpbmRvdy5DdXJyaWVUZWNobm9sb2dpZXMuQmxhem9yLlN3ZWV0QWxlcnQyLkhpZGVQcm9ncmVzc1N0ZXBzID0gKCk6IHZvaWQgPT4ge1xyXG4gIFN3YWwuaGlkZVByb2dyZXNzU3RlcHMoKTtcclxufTtcclxuXHJcbmRvbVdpbmRvdy5DdXJyaWVUZWNobm9sb2dpZXMuQmxhem9yLlN3ZWV0QWxlcnQyLklzVmFsaWRQYXJhbXRlciA9IChwYXJhbU5hbWU6IHN0cmluZyk6IGJvb2xlYW4gPT4ge1xyXG4gIHJldHVybiBTd2FsLmlzVmFsaWRQYXJhbWV0ZXIocGFyYW1OYW1lKTtcclxufTtcclxuXHJcbmRvbVdpbmRvdy5DdXJyaWVUZWNobm9sb2dpZXMuQmxhem9yLlN3ZWV0QWxlcnQyLklzVXBkYXRhYmxlUGFyYW10ZXIgPSAocGFyYW1OYW1lOiBzdHJpbmcpOiBib29sZWFuID0+IHtcclxuICByZXR1cm4gU3dhbC5pc1VwZGF0YWJsZVBhcmFtZXRlcihwYXJhbU5hbWUpO1xyXG59O1xyXG4iXSwic291cmNlUm9vdCI6IiJ9